plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

def sourceDir = '../frontend/build'
def targetDir = 'src/main/resources/static'
def nextjsDir = '../frontend'

tasks.register('buildNextjs', Exec) {
    workingDir nextjsDir
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'cmd', '/c', 'npm', 'run', 'build'
    } else {
        commandLine 'npm', 'run', 'build'
    }
}

tasks.register('copyFiles', Copy) {
    from sourceDir
    into targetDir
}

tasks.register('cleanStatic') {
    doLast {
        fileTree(targetDir).visit { FileVisitDetails details ->
            if (details.file.isFile()) {
                details.file.delete()
            }
        }
    }
}

tasks.named('bootJar') {
    dependsOn 'copyFiles'
}

tasks.named('jar') {
    dependsOn 'copyFiles'
}

tasks.named('classes') {
    dependsOn 'copyFiles'
}

tasks.named('clean') {
    dependsOn 'cleanStatic'
}


tasks.named('copyFiles').configure {
    mustRunAfter 'processResources', 'buildNextjs'
}

tasks.named('processResources').configure {
    mustRunAfter 'cleanStatic'
}

tasks.named('build').configure {
    dependsOn 'buildNextjs'
}

tasks.named('processResources').configure {
    mustRunAfter 'cleanStatic'
}